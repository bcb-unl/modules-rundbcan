// nf-core modules test dbcan
nextflow_process {

    name "Test Process RUNDBCAN_EASYSUBSTRATE"
    script "../main.nf"
    process "RUNDBCAN_EASYSUBSTRATE"

    tag "modules"
    tag "modules_nfcore"
    tag "rundbcan"
    tag "rundbcan/database"
    tag "rundbcan/easysubstrate"

    test("easycgc - simplified") {

        setup {
            run("RUNDBCAN_DATABASE"){
                script "../../database/main.nf"
                process {
                    """
                    """
                }

        }

    }

        when {
            process {
                """

                input[0] = [
                    [id:'test_dbcan'],
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/candidatus_portiera_aleyrodidarum/genome/proteome.fasta', checkIfExists: true)
                ]

                input[1] = [
                    [id:'test_dbcan'],
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/candidatus_portiera_aleyrodidarum/genome/gff/test1.gff', checkIfExists: true),
                    "prodigal"

                ]

                input[2] = RUNDBCAN_DATABASE.out.dbcan_db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() }

            )
        }
    }

    test("easysubstrate - stub") {
        options "-stub"

        when {
            process {
                """
                input[0] = [[id: 'stub'], file('stub')]
                input[1] = [[id: 'stub'], file('stub.gff'), "prodigal"]
                input[2] = file('stub_db')
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() }
            )
        }
    }
}
